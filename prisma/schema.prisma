generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())
  username          String
  password          String
  first_name        String
  last_name         String
  mobile            Int?
  created_at        DateTime      @default(now())
  modified_at       DateTime      @default(now())
  user_address      User_address?
  user_payment      User_payment?
  shopping_sessions User_session?
}

model User_address {
  id          Int    @id @default(autoincrement())
  user_id     Int    @unique
  user        User   @relation(fields: [user_id], references: [id])
  address     String
  city        String
  postal_code String
  country     String
  mobile      Int
}

model User_payment {
  id           Int      @id @default(autoincrement())
  user_id      Int      @unique
  user         User     @relation(fields: [user_id], references: [id])
  payment_type String
  provider     String
  account_no   Int
  expiry       DateTime @default(now())
}

model Payment_details {
  id          Int           @id @default(autoincrement())
  order_id    Int
  order       Order_details @relation(fields: [order_id], references: [id])
  amount      Int
  provider    String
  status      String
  created_at  DateTime      @default(now())
  modified_at DateTime      @default(now())
}

model Shopping_session {
  id          Int      @id @default(autoincrement())
  user_id     Int      @unique
  user        User     @relation(fields: [user_id], references: [id])
  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Order_details {
  id          Int             @id @default(autoincrement())
  user_id     Int             @unique
  user        User            @relation(fields: [user_id], references: [id])
  total       Int
  payment_id  Int
  payment     Payment_details @relation(fields: [payment_id], references: [id])
  created_at  DateTime        @default(now())
  modified_at DateTime        @default(now())
}

model Order_items {
  id          Int           @id @default(autoincrement())
  order_id    Int
  order       Order_details @relation(fields: [order_id], references: [id])
  product_id  Int
  product     Product       @relation(fields: [product_id], references: [id])
  quantity    Int
  created_at  DateTime      @default(now())
  modified_at DateTime      @default(now())
}

model Product {
  id           Int                @id @default(autoincrement())
  name         String
  description  String
  category_id  Int
  category     Product_category[] @relation(fields: [category_id], references: [id])
  inventory_id Int
  inventory    Product_inventory  @relation(fields: [inventory_id], references: [id])
  price        Int
  discount_id  Int?
  discount     Discount           @relation(fields: [discount_id], references: [id])
  created_at   DateTime           @default(now())
  modified_at  DateTime           @default(now())
  deleted_at   DateTime           @default(now())
}

model Product_category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  created_at  DateTime  @default(now())
  modified_at DateTime  @default(now())
  deleted_at  DateTime  @default(now())
  product     Product[]
}

model Product_inventory {
  id          Int       @id @default(autoincrement())
  quantity    Int
  created_at  DateTime  @default(now())
  modified_at DateTime  @default(now())
  deleted_at  DateTime  @default(now())
  product     Product[]
}

model Discount {
  id               Int      @id @default(autoincrement())
  name             String
  description      String
  discount_percent Int
  active           Boolean
  created_at       DateTime @default(now())
  modified_at      DateTime @default(now())
  deleted_at       DateTime @default(now())
  product          Product
}

model Cart_items {
  id          Int              @id @default(autoincrement())
  session_id  Int
  session     Shopping_session @relation(fields: [session_id], references: [id])
  product_id  Int
  product     Product          @relation(fields: [product_id], references: [id])
  quantity    Int
  created_at  DateTime         @default(now())
  modified_at DateTime         @default(now())
}
